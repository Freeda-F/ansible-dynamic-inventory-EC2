---
- name: "Creating EC2 instance using ansible"
  hosts: localhost
  vars_files:
    - ec2.vars
    - access-key.vars

  tasks:

    - name: "AWS - Creating SSH keypair"
      ec2_key:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        name: "{{ keypair_name }}"
        state: present
      register: key_content

    - name: "AWS - Saving the {{keypair_name}}.pem file"
      when: key_content.changed == true
      copy:
        content: "{{ key_content.key.private_key }}"
        dest: "{{ keypair_name}}.pem"
        mode: 0400

    - name: "AWS - creating security group {{ sg1 }}"
      ec2_group:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        name: "{{ sg1 }}"
        description: "Allows 22 port"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
            cidr_ipv6: ::/0
      register: sg1_info

    - name: "AWS - creating security group {{ sg2 }}"
      ec2_group:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        name: "{{ sg2 }}"
        description: "Allows 80,443 port"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
            cidr_ipv6: ::/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
            cidr_ipv6: ::/0
      register: sg2_info

    - name: "Aws - Creating Ec2 Instance"
      ec2:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        key_name: "{{ keypair_name }}"
        instance_type: "t2.micro"
        image: "ami-052cef05d01020f1d"
        group_id:
          - "{{ sg1_info.group_id }}"
          - "{{ sg2_info.group_id }}"
        instance_tags:
            Name: "webserver"
        count_tag:
          Name: "webserver"
        exact_count: 1
        wait: true
      register: ec2_info

    - name: "Displaying instance IP addresses"
      debug:
        msg: "Instance IP address - {{ item.public_ip}}"
      with_items:
        - "{{ ec2_info.tagged_instances }}"

    - name: "Creating Dynamic Inventory"
      add_host:
        name: "{{ item.public_ip }}"
        groups: "amazon"
        ansible_host: "{{ item.public_ip }}"
        ansible_port: 22
        ansible_user: "ec2-user"
        ansible_ssh_private_key_file: "{{ keypair_name }}.pem"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      with_items:
        - "{{ ec2_info.tagged_instances }}"

    - name: "Wait 200 seconds before checking SSH connections"
      wait_for_connection:
        timeout: 200

- name: "Installing Apache Webserver"
  become: true
  hosts: amazon
  vars_files:
    - webserver.vars
  tasks:

    - name: "Installing Apache Webserver & git"
      yum:
        name:
          - httpd
          - git
        state: present

    - name: "Creating Virtualhost"
      template:
        src: "virtualhost.conf.j2"
        dest: "/etc/httpd/conf.d/{{ domain_name }}.conf"
        owner: "root"
        group: "root"

    - name: "Creating Documentroot"
      file:
        path: "/var/www/html/{{ domain_name }}"
        state: directory
        owner: "{{  apache_user }}"
        group: "{{ apache_group }}"

    - name: " Download the website from gitHub"
      git:
        repo: 'https://github.com/Freeda-F/sample-HTML-website.git'
        dest: /var/www/html/{{ domain_name }}/
        clone: yes

    - name: "Setting necessary file & folder permissions"
      file:
        path: /var/www/html
        state: directory
        recurse: yes
        owner: "{{ apache_user }}"
        group: "{{ apache_group }}"

    - name: "Restarting/Enabling httpd"
      service:
        name: httpd
        state: restarted
        enabled: true
